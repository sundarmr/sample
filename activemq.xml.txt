<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<!-- Allows us to use system properties and fabric as variables in this 
		configuration file -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties">
			<bean class="io.fabric8.mq.fabric.ConfigurationProperties" />
		</property>
	</bean>

	<bean id="prodoracledb" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<broker xmlns="http://activemq.apache.org/schema/core"
		brokerName="${broker-name}" dataDirectory="${data}" start="false"
		restartAllowed="false">

		<destinationPolicy>
			<policyMap>
				<policyEntries>
					<policyEntry topic=">" producerFlowControl="true">
						<pendingMessageLimitStrategy>
							<constantPendingMessageLimitStrategy
								limit="1000" />
						</pendingMessageLimitStrategy>
					</policyEntry>
					<amq:policyEntry queue=">" producerFlowControl="true"
						advisoryForConsumed="false" 
						advisoryForDelivery="false"
						advisoryForFastProducers="false" cursorMemoryHighWaterMark="50"
						maxPageSize="4000"
					    advisoryForDiscardingMessages="false"
						memoryLimit="200mb">
						<amq:pendingMessageLimitStrategy>
							<amq:prefetchRatePendingMessageLimitStrategy
								multiplier="3" />
						</amq:pendingMessageLimitStrategy>
					</amq:policyEntry>

				</policyEntries>
			</policyMap>
		</destinationPolicy>

		<managementContext>
			<managementContext createConnector="false" />
		</managementContext>

		<persistenceAdapter>
			<jdbcPersistenceAdapter dataSource="#prodoracledb"
				cleanupPeriod="300000" />
		</persistenceAdapter>

		<sslContext>
			<sslContext keyStore="${karaf.base}/etc/broker.ks"
				protocol="TLSv1" keyStorePassword="password" trustStore="${karaf.base}/etc/truststore.ks"
				trustStorePassword="password" />
		</sslContext>


		<plugins>
			<jaasAuthenticationPlugin configuration="karaf" />

			<!-- Configure authentication; Username, passwords and groups -->
			<simpleAuthenticationPlugin>
				<users>
					<authenticationUser username="system" password="system12"
						groups="users,admins" />
					<authenticationUser username="user" password="user12"
						groups="users" />
					<authenticationUser username="guest" password="guest12"
						groups="guests" />
					<authenticationUser username="psread" password="psread"
						groups="psread" />
					<authenticationUser username="peoplesoftread"
						password="peoplesoftread1" groups="peoplesoftread" />
					<authenticationUser username="peoplesoftwrite"
						password="peoplesoftwrite" groups="peoplesoftwrite" />

				</users>
			</simpleAuthenticationPlugin>


			<!-- lets enable detailed logging in the broker but ignore ConnectionEvents -->
			<loggingBrokerPlugin logAll="false"
				logConsumerEvents="true" logTransactionEvents="true" />

			<authorizationPlugin>
				<map>
					<authorizationMap>
						<authorizationEntries>
							<authorizationEntry queue=">" read="admins"
								write="admins" admin="admins" />
							<authorizationEntry queue="PeopleSoft" read="users" />
							<authorizationEntry queue="PeopleSoft8" write="users" />
							<authorizationEntry queue="org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,psread" write="admins" />
							<authorizationEntry queue="org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,admins" />
							<authorizationEntry queue="it.org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,psread" write="admins" />
							<authorizationEntry queue="it.org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,admins" />
							<authorizationEntry queue="pt.org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,psread" write="admins" />
							<authorizationEntry queue="pt.org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,admins" />
							<authorizationEntry queue="uat.org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,psread" write="admins" />
							<authorizationEntry queue="uat.org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,admins" />
							<authorizationEntry queue="dev.org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,users" write="admins" />
							<authorizationEntry queue="dev.org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,users,admins" />
							<authorizationEntry queue="mig.org.ets.ereg.peoplesoft.out"
								read="peoplesoftread,admins,users" write="admins" />
							<authorizationEntry queue="mig.org.ets.ereg.peoplesoft.in"
								read="admins" write="peoplesoftwrite,users,admins" />
							<authorizationEntry queue="TEST" read="guests,users"
								write="guests" />
							<authorizationEntry queue="TEST.Q" read="guests"
								write="guests" />
							<authorizationEntry topic=">" read="admins"
								write="admins" admin="admins" />
							<authorizationEntry topic="PeopleSoft.>" read="users"
								write="users" admin="users" />
							<authorizationEntry topic="TEST.>" read="guests"
								write="guests,users" admin="guests,users" />
							<authorizationEntry topic="ActiveMQ.Advisory.>"
								read="guests,users,peoplesoftwrite,peoplesoftread,psread" write="guests,users,peoplesoftwrite,peoplesoftread,psread"
								admin="guests,users,peoplesoftwrite,peoplesoftread,psread" />
						</authorizationEntries>
					</authorizationMap>
				</map>
			</authorizationPlugin>
		</plugins>
		
		<systemUsage>
			<systemUsage>
				<memoryUsage>
					<memoryUsage percentOfJvmHeap="70" />
				</memoryUsage>
				<storeUsage>
					<storeUsage limit="100 gb" />
				</storeUsage>
				<tempUsage>
					<tempUsage limit="50 gb" />
				</tempUsage>
			</systemUsage>
		</systemUsage>
		<transportConnectors>
			<transportConnector name="ssl"
				uri=" nio+ssl://0.0.0.0:8616?transport.enabledCipherSuites=SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA&amp;jms.rebalanceClusterClients=true&amp;jms.optimizeAcknowledge=true&amp;maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600 " />
		</transportConnectors>
		<networkConnectors>
		
			<networkConnector name="master2nc"
				uri="masterslave:(nio+ssl://etsvcln1531.etslan.org:8616,nio+ssl://etsvcln1532.etslan.org:8617)" 
				conduitSubscriptions="false"
				messageTTL="2" 
				duplex="false" userName="system" password="system12" >
				<amq:dynamicallyIncludedDestinations>
					<amq:queue physicalName=">"></amq:queue>
				</amq:dynamicallyIncludedDestinations>
			</networkConnector>
		</networkConnectors>
	</broker>

</beans>
